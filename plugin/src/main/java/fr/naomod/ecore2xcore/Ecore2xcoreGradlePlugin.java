/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package fr.naomod.ecore2xcore;

import org.gradle.api.Plugin;
import org.gradle.api.Project;
import org.gradle.api.logging.Logger;

/**
 * A simple 'hello world' plugin.
 */
public class Ecore2xcoreGradlePlugin implements Plugin<Project> {
    public void apply(Project project) {
        // Register a task
        final Logger log = project.getLogger();
        Ecore2XcoreExtension extension = project.getExtensions().create("ecore2xcore", Ecore2XcoreExtension.class);
        
        project.getTasks().register("generateXcore", GenerateXcoreTask.class, task -> {
            // set defaults 

            // targetDir = ${project.buildDir}/xcore-gen
            task.getTargetDir().convention(project.getLayout().getBuildDirectory().dir("xcore-gen"));
            
            // sourceDir = ${project.projectDirectory}/models
            task.getSourceDir().convention(project.getLayout().getProjectDirectory().dir("models"));
            
            // basePackage
            task.getBasePackage().convention("atl.research");


            // handle user override
            if (extension.getTargetDir() != null) {
                log.debug("Found targetDir configuration: " + extension.getTargetDir());
                task.getTargetDir().value(project.getLayout().getProjectDirectory().dir(extension.getTargetDir()));
            }
            
            if (extension.getSourceDir() != null) {
                log.debug("Found sourceDir configuration: " + extension.getSourceDir());
                task.getSourceDir().value(project.getLayout().getProjectDirectory().dir(extension.getSourceDir()));
            } 

            if (extension.getBasePackage() != null) {
                log.debug("Found basePackage configuration: " + extension.getBasePackage());
                task.getBasePackage().set(extension.getBasePackage());
            }
        });
    }
}
